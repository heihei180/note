(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{390:function(t,a,s){"use strict";s.r(a);var n=s(25),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"sw-通过插件增强java类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sw-通过插件增强java类"}},[t._v("#")]),t._v(" SW 通过插件增强Java类")]),t._v(" "),a("p",[t._v("代码位置： "),a("code",[t._v("org.apache.skywalking.apm.agent.SkyWalkingAgent.Transformer#transform")])]),t._v(" "),a("blockquote",[a("p",[t._v("在这之前，sw 已经寻找到了所有的插件。"),a("br"),t._v("\n接下来的操作，就是sw要使用这些插件，利用插件增强目标的Java类。"),a("br"),t._v("\n而本次讨论的就是 sw 如何使用 插件增强 目标Java类")])]),t._v(" "),a("h2",{attrs:{id:"_1-skywalking-如何匹配插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-skywalking-如何匹配插件"}},[t._v("#")]),t._v(" 1. skyWalking 如何匹配插件")]),t._v(" "),a("p",[t._v("再sky walking 的插件定义中，有这样一个函数：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * Define the {@link ClassMatch} for filtering class.\n     *\n     * @return {@link ClassMatch}\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassMatch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("enhanceClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这个函数用于指定插件增强哪个Java类。需要注意的是，这个函数的返回值不是一个 Class 对象，而是一个 ClassMatch 对象。\n这个类的功能类似于一个过滤器，用于通过指定的规则，匹配出需要增强的类。")]),t._v(" "),a("ul",[a("li",[t._v("NameMatch： 通过类名匹配")]),t._v(" "),a("li",[t._v("PrefixMatch：通过类名前缀匹配")]),t._v(" "),a("li",[t._v("InterfaceMatch：通过接口匹配")]),t._v(" "),a("li",[t._v("MultiClassNameMatch：通过多个类名匹配\n... 其他的实现方式就不一一列举了")])]),t._v(" "),a("p",[t._v("找到合适的插件之后，就会调用插件的"),a("code",[t._v("enhance")]),t._v("函数，来增强目标类。\n"),a("code",[t._v("AbstractClassEnhancePluginDefine#enhance")]),t._v("\n增强分为两类：")]),t._v(" "),a("ul",[a("li",[t._v("增强类实例函数\n"),a("ul",[a("li",[t._v("包括构造函数")]),t._v(" "),a("li",[t._v("对象函数")])])]),t._v(" "),a("li",[t._v("增强静态函数")])]),t._v(" "),a("h2",{attrs:{id:"_1-2-skywalking-如何增强类实例函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-skywalking-如何增强类实例函数"}},[t._v("#")]),t._v(" 1.2 skyWalking 如何增强类实例函数")]),t._v(" "),a("p",[t._v("再上面说到，会调用插件的"),a("code",[t._v("enhance")]),t._v("函数，来增强目标类。\n再enhance函数中，声明了两种方法来增强一个Java类：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("enhanceInstance")]),t._v("：增强类实例函数、构造函数")]),t._v(" "),a("li",[a("code",[t._v("enhanceClass")]),t._v("：增强静态函数")])]),t._v(" "),a("p",[t._v("两者的增强流程其实大差不差，大致是以下步骤：")]),t._v(" "),a("ol",[a("li",[t._v("获取当前插件的拦截点")])]),t._v(" "),a("ul",[a("li",[t._v("静态函数拦截点 "),a("code",[t._v("getStaticMethodsInterceptPoints")])]),t._v(" "),a("li",[t._v("实例函数拦截点 "),a("code",[t._v("getInstanceMethodsInterceptPoints")])]),t._v(" "),a("li",[t._v("构造函数拦截点 "),a("code",[t._v("getConstructorsInterceptPoints")])])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("遍历拦截点，对每一个拦截点进行增强")])]),t._v(" "),a("h2",{attrs:{id:"_1-3-skywalking-具体如何增强一个java类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-skywalking-具体如何增强一个java类"}},[t._v("#")]),t._v(" 1.3 skyWalking 具体如何增强一个Java类")]),t._v(" "),a("p",[t._v("通过告诉byteBuddy的builder 拦截"),a("RouterLink",{attrs:{to:"/Java/skywalking/skywalking-java/5. 启动sw的服务.html"}},[t._v("5. 启动sw的服务.md")]),t._v("规则，将指定的函数执行，委托给我们组件声明的目标函数去执行。")],1),t._v(" "),a("p",[t._v("下面其实就是一段 很正常的byteBuddy代码，用于增强一个Java类的构造函数。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("newClassBuilder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newClassBuilder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("constructorInterceptPoint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConstructorMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拦截构造函数")]),t._v("\n                                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用默认拦截规则")]),t._v("\n                                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("intercept")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SuperMethodCall")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INSTANCE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("andThen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodDelegation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("withDefaultConfiguration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将此函数，委托给谁去执行")]),t._v("\n                                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConstructorInter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("constructorInterceptPoint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConstructorInterceptor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" classLoader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" delegateNamingResolver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("constructorInterceptPoint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("通过上面代码声明，byteBuddy就添加了类的构造函数的拦截规则。\n会在实例化一个类的时候，调用"),a("code",[t._v("ConstructorInter")]),t._v("的"),a("code",[t._v("intercept")]),t._v("函数，来执行我们的目标函数。\n那时候，我们就可以再声明的"),a("code",[t._v("intercept")]),t._v("函数中，执行我们的目标函数了。进行自定义操作了！！！")]),t._v(" "),a("h3",{attrs:{id:"拦截对象函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拦截对象函数"}},[t._v("#")]),t._v(" 拦截对象函数")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("newClassBuilder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newClassBuilder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("junction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定函数拦截规则")]),t._v("\n                                     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("intercept")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodDelegation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("withDefaultConfiguration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用默认拦截规则")]),t._v("\n                                           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将此函数，委托给谁去执行")]),t._v("\n                                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InstMethodsInter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("interceptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" classLoader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" delegateNamingResolver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instanceMethodsInterceptPoint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"拦截静态函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拦截静态函数"}},[t._v("#")]),t._v(" 拦截静态函数")]),t._v(" "),a("p",[t._v("指定静态函数的拦截，将其委托给我们声明的目标函数去执行。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("newClassBuilder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newClassBuilder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isStatic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("and")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("staticMethodsInterceptPoint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMethodsMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                                      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("intercept")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodDelegation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("withDefaultConfiguration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                                          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StaticMethodsInter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("interceptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" delegateNamingResolver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("staticMethodsInterceptPoint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           \n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);