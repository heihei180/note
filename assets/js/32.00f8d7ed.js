(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{344:function(v,_,t){"use strict";t.r(_);var a=t(25),s=Object(a.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"仿微信-im-系统简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#仿微信-im-系统简介"}},[v._v("#")]),v._v(" 仿微信 IM 系统简介")]),v._v(" "),_("blockquote",[_("p",[v._v("微信从 2011 年 1 月 21 日诞生至今，已经成为国内数亿用户必不可少的即时通信工具，是男女老少手机中必备的顶级 App。Netty 是一个异步基于事件驱动的高性能网络通信框架，在互联网中间件领域网络通信层是无可争议的最强王者，两者强强联合又会擦出什么样的火花？在接下来的小节中，我将带领大家使用 Netty 一步一步实现微信 IM 聊天的核心功能。")])]),v._v(" "),_("p",[v._v("微信的聊天又分为单聊和群聊，下面分别来介绍一下。")]),v._v(" "),_("h2",{attrs:{id:"单聊流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单聊流程"}},[v._v("#")]),v._v(" 单聊流程")]),v._v(" "),_("p",[v._v("单聊指的是两个用户之间相互聊天。下面我们来看一下，用户单聊的基本流程")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/8/9/1651c08e91cdd8e6?w=1228&h=836&f=png&s=94796",alt:"单聊流程"}})]),v._v(" "),_("ol",[_("li",[v._v("如上图，A 要和 B 聊天，首先 A 和 B 需要与服务器建立连接，然后进行一次登录流程，服务端保存用户标识和 TCP 连接的映射关系")]),v._v(" "),_("li",[v._v("A 发消息给 B，首先需要将带有 B 标识的消息数据包发送到服务器，然后服务器从消息数据包中拿到 B 的标识，找到对应的 B 的连接，将消息发送给 B")]),v._v(" "),_("li",[v._v("任意一方发消息给对方，如果对方不在线，需要将消息缓存，对方上线之后再发送")])]),v._v(" "),_("p",[v._v("我们把客户端与服务端之间相互通信的数据包称为"),_("strong",[v._v("指令数据包")]),v._v("，指令数据包分为指令和数据，每一种指令对应客户端或者服务端的一种操作，数据部分对应的是指令处理需要的数据。")]),v._v(" "),_("p",[v._v("下面我们先来看一下，要实现单聊，客户端与服务端分别要实现哪些指令：")]),v._v(" "),_("h2",{attrs:{id:"单聊的指令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单聊的指令"}},[v._v("#")]),v._v(" 单聊的指令")]),v._v(" "),_("h3",{attrs:{id:"指令图示"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#指令图示"}},[v._v("#")]),v._v(" 指令图示")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/9/24/1660adaac93d16e2?w=1240&h=1233&f=png&s=175838",alt:"image.png"}})]),v._v(" "),_("h3",{attrs:{id:"指令列表"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#指令列表"}},[v._v("#")]),v._v(" 指令列表")]),v._v(" "),_("p",[v._v("指令内容")]),v._v(" "),_("p",[v._v("客户端")]),v._v(" "),_("p",[v._v("服务端")]),v._v(" "),_("p",[v._v("登录请求")]),v._v(" "),_("p",[v._v("发送")]),v._v(" "),_("p",[v._v("接收")]),v._v(" "),_("p",[v._v("登录响应")]),v._v(" "),_("p",[v._v("接收")]),v._v(" "),_("p",[v._v("发送")]),v._v(" "),_("p",[v._v("客户端发消息")]),v._v(" "),_("p",[v._v("发送")]),v._v(" "),_("p",[v._v("接收")]),v._v(" "),_("p",[v._v("服务端发消息")]),v._v(" "),_("p",[v._v("接收")]),v._v(" "),_("p",[v._v("发送")]),v._v(" "),_("p",[v._v("登出请求")]),v._v(" "),_("p",[v._v("发送")]),v._v(" "),_("p",[v._v("接收")]),v._v(" "),_("p",[v._v("登出响应")]),v._v(" "),_("p",[v._v("接收")]),v._v(" "),_("p",[v._v("发送")]),v._v(" "),_("h2",{attrs:{id:"群聊流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#群聊流程"}},[v._v("#")]),v._v(" 群聊流程")]),v._v(" "),_("p",[v._v("群聊指的是一个组内多个用户之间的聊天，一个用户发到群组的消息会被组内任何一个成员接收，下面我们来看一下群聊的基本流程")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/8/9/1651c08e91bfb935?w=1240&h=872&f=png&s=183265",alt:"image.png"}})]),v._v(" "),_("p",[v._v("如上图，要实现群聊，其实和单聊类似")]),v._v(" "),_("ol",[_("li",[v._v("A，B，C 依然会经历登录流程，服务端保存用户标识对应的 TCP 连接")]),v._v(" "),_("li",[v._v("A 发起群聊的时候，将 A，B，C 的标识发送至服务端，服务端拿到之后建立一个群聊 ID，然后把这个 ID 与 A，B，C 的标识绑定")]),v._v(" "),_("li",[v._v("群聊里面任意一方在群里聊天的时候，将群聊 ID 发送至服务端，服务端拿到群聊 ID 之后，取出对应的用户标识，遍历用户标识对应的 TCP 连接，就可以将消息发送至每一个群聊成员")])]),v._v(" "),_("p",[v._v("下面，我们再来看一下群聊除了需要实现上述指令之外，还需要实现的指令集")]),v._v(" "),_("h2",{attrs:{id:"群聊要实现的指令集"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#群聊要实现的指令集"}},[v._v("#")]),v._v(" 群聊要实现的指令集")]),v._v(" "),_("h3",{attrs:{id:"指令图示-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#指令图示-2"}},[v._v("#")]),v._v(" 指令图示")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/9/24/1660ae0860e0cf88?w=1240&h=1403&f=png&s=234300",alt:"image.png"}})]),v._v(" "),_("h3",{attrs:{id:"指令列表-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#指令列表-2"}},[v._v("#")]),v._v(" 指令列表")]),v._v(" "),_("p",[v._v("指令内容")]),v._v(" "),_("p",[v._v("客户端")]),v._v(" "),_("p",[v._v("服务端")]),v._v(" "),_("p",[v._v("创建群聊请求")]),v._v(" "),_("p",[v._v("发送")]),v._v(" "),_("p",[v._v("接收")]),v._v(" "),_("p",[v._v("群聊创建成功通知")]),v._v(" "),_("p",[v._v("接收")]),v._v(" "),_("p",[v._v("发送")]),v._v(" "),_("p",[v._v("加入群聊请求")]),v._v(" "),_("p",[v._v("发送")]),v._v(" "),_("p",[v._v("接收")]),v._v(" "),_("p",[v._v("群聊加入通知")]),v._v(" "),_("p",[v._v("接收")]),v._v(" "),_("p",[v._v("发送")]),v._v(" "),_("p",[v._v("发送群聊消息")]),v._v(" "),_("p",[v._v("发送")]),v._v(" "),_("p",[v._v("接收")]),v._v(" "),_("p",[v._v("接收群聊消息")]),v._v(" "),_("p",[v._v("接收")]),v._v(" "),_("p",[v._v("发送")]),v._v(" "),_("p",[v._v("退出群聊请求")]),v._v(" "),_("p",[v._v("发送")]),v._v(" "),_("p",[v._v("接收")]),v._v(" "),_("p",[v._v("退出群聊通知")]),v._v(" "),_("p",[v._v("接收")]),v._v(" "),_("p",[v._v("发送")]),v._v(" "),_("h2",{attrs:{id:"netty"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#netty"}},[v._v("#")]),v._v(" Netty")]),v._v(" "),_("p",[v._v("我们使用 Netty 统一的 IO 读写 API 以及强大的 pipeline 来编写业务处理逻辑，在后续的章节中，我会通过 IM 这个例子，带你逐步了解 Netty 的以下核心知识点。")]),v._v(" "),_("ul",[_("li",[v._v("服务端如何启动")]),v._v(" "),_("li",[v._v("客户端如何启动")]),v._v(" "),_("li",[v._v("数据载体 ByteBuf")]),v._v(" "),_("li",[v._v("长连自定义协议如何设计")]),v._v(" "),_("li",[v._v("粘包拆包原理与实践")]),v._v(" "),_("li",[v._v("如何实现自定义编解码")]),v._v(" "),_("li",[v._v("pipeline 与 channelHandler")]),v._v(" "),_("li",[v._v("定时发心跳怎么做")]),v._v(" "),_("li",[v._v("如何进行连接空闲检测")])]),v._v(" "),_("h3",{attrs:{id:"客户端使用-netty-的程序逻辑结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#客户端使用-netty-的程序逻辑结构"}},[v._v("#")]),v._v(" 客户端使用 Netty 的程序逻辑结构")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/8/9/1651c08e91ca8b74?w=1240&h=733&f=png&s=57795",alt:"image.png"}})]),v._v(" "),_("p",[v._v("上面这幅图展示了客户端的程序逻辑结构")]),v._v(" "),_("ol",[_("li",[v._v("首先，客户端会解析控制台指令，比如发送消息或者建立群聊等指令")]),v._v(" "),_("li",[v._v("然后，客户端会基于控制台的输入创建一个指令对象，用户告诉服务端具体要干什么事情")]),v._v(" "),_("li",[v._v("TCP 通信需要的数据格式为二进制，因此，接下来通过自定义二进制协议将指令对象封装成二进制，这一步称为协议的编码")]),v._v(" "),_("li",[v._v("对于收到服务端的数据，首先需要截取出一段完整的二进制数据包（拆包粘包相关的内容后续小节会讲解）")]),v._v(" "),_("li",[v._v("将此二进制数据包解析成指令对象，比如收到消息")]),v._v(" "),_("li",[v._v("将指令对象送到对应的逻辑处理器来处理")])]),v._v(" "),_("h3",{attrs:{id:"服务端使用-netty-的程序逻辑结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务端使用-netty-的程序逻辑结构"}},[v._v("#")]),v._v(" 服务端使用 Netty 的程序逻辑结构")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/8/21/1655969de0f3b8c8?w=1240&h=647&f=png&s=87864",alt:"image.png"}})]),v._v(" "),_("p",[v._v("服务端的程序逻辑结构与客户端非常类似，这里不太赘述。")]),v._v(" "),_("h2",{attrs:{id:"本小册实现-im-的形式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#本小册实现-im-的形式"}},[v._v("#")]),v._v(" 本小册实现 IM 的形式")]),v._v(" "),_("p",[v._v("由于本小册以传授 Netty 基础知识为主，故 IM 相关的图形化界面不会涉及，后续所有的聊天基于控制台进行，通过与控制台交互可以进行单聊和群聊。")])])}),[],!1,null,null,null);_.default=s.exports}}]);